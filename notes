

#!/bin/bash

MSG='
{"value":"bash!scp!3!dev"}
'
## note ! in place of space for sending cmds
## import test
#echo $PWD
#MSG=$(cat "$PWD"/0rig.json)
MSG='
{"value":"bash blast"}
'
# MAX CHAR 42 for MSG
# example: {"value":"22over9000tothemoonforevermoona"}
/usr/bin/curl -m 5 -s -X POST --output /dev/null localhost:6725 -d "${MSG}"




#while { echo -en "$RESPONSE"; } | nc -l "${1:-8080}" 
#while { echo -en "$RESPONSE"; } | RESPJSON=$(nc -l "${1:-8080}" 2>&1);
#while { echo -en "$RESPONSE"; } | ( nc -l "${1:-8080}" >> "$DIR"/response.json )



#echo "mkdir bash_server"
#cd $DIR


#RESPJSON=$(cat $PWD/response.json)


#cat "$DIR"/screenlog.0

#LOG=$(cat "$DIR"/screenlog.0 | sed -e 's/{\(.*\)}/\1/')

#LOG=$(cat "$DIR"/screenlog.0 | sed -n '/{/,/}/p')


#DIR=/Volumes/ramdisk/bss

#sed 's/}.*//' "$PWD"/response.json

LOG=$(cat "$PWD"/response.json)

#echo $FINAL_CMD
#FINAL_CMD="$FINAL_CMD"
#echo $FINAL_CMD
#bash "$PWD"/$FINAL_CMD &
#$FINAL_CMD &
#if [[ $FINAL_CMD == blast ]]
#then
#bash blast &
#echo "inside exe"
#fi


#BSS="bash server.sh 6725 /Volumes/ramdisk/bss"
BSS="bash server.sh 6725 $DIR"
else
#BSS="bash server.sh $PORT /Volumes/ramdisk/bss"
BSS="bash server.sh $PORT $DIR"
fi
echo $BSS
screen -dmS bss -L $BSS
screen -r
cd "$PWD"



#CMD=$(echo $LOG | tr -d '{"value":"')
CMD=$(cat "$PWD"/response.json | cut -c 11- )
#cut -c 5-
echo $CMD
FINAL_CMD=$(echo $CMD | tr -d '"}' )
echo $FINAL_CMD
#FINAL_CMD=$(echo $CMD2 | sed 's/.$//' )
#echo $FINAL_CMD
## | tr -d '}' )
##{"value":"
#}
#bash "$PWD"/$FINAL_CMD &
$FINAL_CMD &

echo "cmd executed"




#!/bin/bash
PWD=$(pwd)
COUNTER=0
#REQUEST=""
##DIR=/Volumes/ramdisk/bss
#> "$DIR"/screenlog.0
#[[ -d "$DIR" ]] || mkdir "$DIR"
#PORT="6700"
#RESP="hello this is bash server"
#RESPONSE="HTTP/2 200 OK\r\nConnection: keep-alive\r\n\r\n${RESP:-"OK"}\r\n"
#while { echo -en "$RESPONSE"; } | nc -l "${PORT:-8080}"; #-c <bash cmd>
#while nc -l "${1:-8080}" > "$DIR"/response.json;
#RESPONSE="HTTP/1.1 200 OK\r\nConnection: keep-alive\r\n\r\n${2:-"OK"}\r\n"
#while { echo -en "$RESPONSE" > "$PWD"/LOG; } | nc -l "${1:-8080}"; 
#while { echo -en "$RESPONSE"; } | nc -l "${1:-8080}"; 
#while [[ 1 ]] | nc -l "${1:-8080}" | tee "$PWD"/REQUEST; 
while [[ 1 ]] | nc -l "${1:-8080}"; 
#nc -l "${1:-8080}" -e bash blast &
#while [[ 1 ]]
do
#nc -l "${1:-8080}" > "$PWD"/LOG
#REQUEST="$(echo -en "$RESPONSE"; | nc -l "${1:-8080}";)"
#REQUEST=$(cat "$PWD"/REQUEST)
COUNTER=$((COUNTER+1))
#echo "tx $COUNTER"
#bash blast $COUNTER $REQUEST & 
bash connector $COUNTER $PWD & 
#echo "tx # $COUNTER recv"
#touch "$DIR"/response.json
#sleep 1
#cat "$DIR"/screenlog.0 > "$DIR"/response.json
#sed -i.backup 's+target_key_value+replacement_key_value+g' <filename>
#echo $RESPJSON > "$DIR"/response.json
#if [[ ! -f "$DIR/blast" ]] 
#then
#echo "cp blast to dir"
#cd "$DIR"
#cp "$BLAST" "$DIR"
#bash blast &
#else
#echo "blast already present in dir"
#bash blast &
#fi ## if [[ ! -f "$DIR/blast" ]] 
#cd $PWD
#> "$DIR"/screenlog.0
done ##  while { echo -en "$RESPONSE"; } | nc -l "${1:-8080}"; 




